name: Publish and Deploy

on:
  push:
    branches:
      - main

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  packages: read

# 允许一个并发部署
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v2
      - name: 'Setup nodejs'
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: 'install'
        run: yarn
      - name: 'lint'
        run: yarn lint
      - name: 'Build Artifact'
        run: yarn build
      - name: 'Publish to npm'
        run: |
          NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
          NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [[ $(npm view "${NPM_PACKAGE_NAME}" versions) != *"'${NPM_PACKAGE_VERSION}'"* ]]; then
            npm publish
            echo "Successfully published version ${NPM_PACKAGE_VERSION} of ${NPM_PACKAGE_NAME} to GitLab's NPM registry: ${CI_PROJECT_URL}/-/packages"
          else
            echo "Version ${NPM_PACKAGE_VERSION} of ${NPM_PACKAGE_NAME} has already been published, so no new version has been published."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish to GitHub Package
        run: |
          npm config set registry https://npm.pkg.github.com
          npm config set //npm.pkg.github.com/:_authToken ${{secrets.GITHUB_TOKEN}}
          npm publish --registry https://npm.pkg.github.com
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './docs'
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
